[aliases]
test = pytest

[coverage:report]
exclude_lines =
    @abc.abstractmethod
    @abc.abstractproperty
    CancelledError
    NotImplementedError
    pragma: no cover
    __repr__
    __str__
fail_under = 95
precision = 2
show_missing = True

[coverage:run]
branch = True
source =
    src
    tests

[flake8]
ignore = E203,W503
max-line-length = 88

[isort]
atomic = true
default_section = THIRDPARTY
force_grid_wrap = 0
include_trailing_comma = true
indent = '    '
known_first_party = airflow_declarative
known_third_party =
line_length = 88
lines_after_imports = 2
multi_line_output = 3
not_skip = __init__.py
order_by_type = true
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
use_parentheses = True

[metadata]
author = Usermodel @ Rambler&Co
author_email = um@rambler-co.ru
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    License :: OSI Approved :: Apache Software License
    Operating System :: MacOS :: MacOS X
    Operating System :: Microsoft :: Windows
    Operating System :: POSIX
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Topic :: Software Development :: Libraries
description = Airflow DAGs done declaratively
license = Apache 2.0
long_description = file: README.rst
maintainer = Alexander Shorin
maintainer_email = kxepal@gmail.com
name = airflow-declarative
url = https://github.com/rambler-digital-solutions/airflow-declarative
version =

[mypy]
check_untyped_defs = True

[mypy-pytest.*]
ignore_missing_imports = True

[options]
include_package_data = True
install_requires =
# `apache-airflow` shouldn't be here, otherwise there might be
# a circular dependency: a patched Airflow might depend on
# `airflow-declarative`, in which case `airflow-declarative`
# cannot depend on Airflow.
    croniter
    funcsigs; python_version<"3"
    jinja2>=2.8
    trafaret-config==1.0.1
    trafaret<2,>=1.0
package_dir =
    = src
packages = find:
python_requires = >=3.6

[options.extras_require]
develop =
    apache-airflow
    black==19.3b0; python_version>="3.6"
    coverage==4.5.4
    flake8==3.7.8
    isort==4.3.21
    mock==2.0.0
    pylint==2.4.2; python_version>="3"
    pytest==4.6.6
    sphinx-rtd-theme==0.4.3
    sphinx==2.2.0; python_version>="3"

[options.packages.find]
where = src

[tool:cookiecutter_context]
_template = new-python-project
coverage_fail_under = 95
metadata_author = Usermodel @ Rambler&Co
metadata_author_email = um@rambler-co.ru
metadata_description = Airflow DAGs done declaratively
metadata_long_description = file: README.rst
metadata_name = airflow-declarative
metadata_url = https://github.com/rambler-digital-solutions/airflow-declarative
project_dest = airflow-declarative
project_monorepo_name =
python_package = airflow_declarative

[tool:pytest]
addopts =
    --showlocals
    --verbose

; Show warnings. Similar to `python -Wd`.
filterwarnings = d
