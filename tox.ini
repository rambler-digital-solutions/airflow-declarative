[tox]
envlist=
; Airflow 1.8 contains a `pip.get_installed_distributions()` call,
; which is not supported by pip>=10: https://github.com/pypa/pip/issues/5243
    py{27,35,36}-airflow18-pip9,
; airflow<1.11 contain a variable named `async` in their setup.py,
; which makes them incompatible with python>=3.7.
    py{27,35,36}-airflow{19,110},
    lint,

[testenv]
setenv =
; Airflow since 1.10 requires an env var to be set before installation:
;
; RuntimeError: By default one of Airflow's dependencies installs
; a GPL dependency (unidecode). To avoid this dependency set
; SLUGIFY_USES_TEXT_UNIDECODE=yes in your environment when you install
; or upgrade Airflow. To force installing the GPL version
; set AIRFLOW_GPL_UNIDECODE
    SLUGIFY_USES_TEXT_UNIDECODE=yes

deps =
    airflow18: apache-airflow>=1.8,<1.9
    airflow19: apache-airflow>=1.9,<1.10
    airflow110: apache-airflow>=1.10,<1.11
; Since Airflow 1.10 snakebite is not included to install_requires on py27,
; because they claim that it is not py27 compatible. But we import
; the airflow modules which in turn import the snakebite, so let's
; install it explicitly.
    py27-airflow110: snakebite>=2.7.8
extras =
    develop
whitelist_externals = make
commands = make check-coverage
; Fix pytest-coverage not working because tox doesn't install
; sources to the working dir by default.
usedevelop = True

; A workaround for installing a specific pip version inside a tox's virtualenv:
; https://stackoverflow.com/a/39660073
[testenv:py27-airflow18-pip9]
install_command = {toxinidir}/tox-pip9.sh {opts} {packages}
[testenv:py35-airflow18-pip9]
install_command = {toxinidir}/tox-pip9.sh {opts} {packages}
[testenv:py36-airflow18-pip9]
install_command = {toxinidir}/tox-pip9.sh {opts} {packages}

[testenv:lint]
basepython = python3
commands = make check-lint
